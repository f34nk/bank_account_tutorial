<%= case @data do %>
	<% %{account_index: account_index, account_number: account_number, account_title: account_title, branch_number: branch_number, currency: "EUR",  last_balance: last_balance, current_balance: current_balance, current_balance_date: current_balance_date, start_date: start_date, end_date: end_date, headers: %{beneficiary_client: beneficiary_client, bic: bic, booking_date: booking_date, booking_value: booking_value, creditors_id: creditors_id, currency: currency, customer_reference: customer_reference, debit: debit, divergent_receiver: divergent_receiver, extra_amount: extra_amount, extra_fees: extra_fees, have: have, iban: iban, mandate_reference: mandate_reference, number_of_checks: number_of_checks, number_of_orders: number_of_orders, sales_type: sales_type, usage: usage, total_balance: total_balance}, transactions: transactions} -> %>

<canvas id="myChart" height="40vh" width="80vw"></canvas>
<script type="text/javascript">
$(document).ready(function() {

  var labelData = [<%= for %{booking_date: value} <- transactions do %> "<%= value %>", <% end %>];

  var debitData = [<%= for %{debit: value, currency: currency} <- transactions do %> "<%= BankAccount.Utils.to_printable_amount(value, currency) %>", <% end %>];

  var haveData = [<%= for %{have: value, currency: currency} <- transactions do %> "<%= BankAccount.Utils.to_printable_amount(value, currency) %>", <% end %>];

  var totalData = [<%= for %{total_balance: value, currency: currency} <- transactions do %> "<%= BankAccount.Utils.to_printable_amount(value, currency) %>", <% end %>];

  var pointRadiusDebit = 4;
  var pointRadiusHave = 8;
  var pointRadiusTotal = 4;
  var borderWidth = 1;

  var ctx = document.getElementById("myChart").getContext('2d');
  var myChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: labelData,
      datasets: [
        {
          label: "<%= debit %>",
          data: debitData,
          pointBackgroundColor: 'red',
          pointRadius: pointRadiusDebit,
          backgroundColor: '#FEBABA',
          borderWidth: borderWidth,
          spanGaps: false
        },
        {
          label: "<%= have %>",
          data: haveData,
          pointBackgroundColor: 'green',
          pointRadius: pointRadiusHave,
          backgroundColor: '#BBFFBFFF',
          borderWidth: borderWidth,
          spanGaps: false
        },
        {
          label: "<%= total_balance %>",
          data: totalData,
          pointBackgroundColor: 'blue',
          pointRadius: pointRadiusTotal,
          fill: false
        }
      ]
    },
    options: {
      elements: {
        line: {
          tension: 0, // disables bezier curves
        }
      },
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero:true
          }
        }]
      }
    }
  });
});
</script>

  <% other -> %> <%= other %>

<% end %>
